{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductServiceService = /*#__PURE__*/(() => {\n  class ProductServiceService {\n    constructor(http) {\n      this.http = http;\n      this.count = 0;\n      this.c = 0;\n      this.apiUrl = 'http://localhost:3000/products/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    } // getAllProducts(){\n    //   this.products=\n    //   [\n    //     { idProduct: 1, code: 127,libelle: \"PC\", prixunitaire : 2000, tauxTva :10},\n    //     { idProduct: 2, code: 128,libelle: \"TV\", prixunitaire : 1000, tauxTva :20},\n    //     { idProduct: 3, code: 128,libelle: \"Table\", prixunitaire : 200, tauxTva :30},\n    //     ]\n    //     return this.products;\n    // }\n\n\n    getNbProductsByLibelle(libelle, products) {\n      if (this.count == 0) {\n        for (let i of products) {\n          if (i.libelle == libelle) this.count++;else this.count;\n        }\n      }\n\n      this.c = this.count;\n      this.count = 0;\n      return this.c;\n    }\n\n    getAllProducts() {\n      return this.http.get(this.apiUrl);\n    }\n\n    addProduct(product) {\n      //console.log(client);\n      return this.http.post(this.apiUrl, product, this.httpOptions);\n    }\n\n    deleteProduct(id) {\n      return this.http.delete(this.apiUrl + id).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    updateProduct(data, id) {\n      return this.http.put(this.apiUrl + id, data, this.httpOptions).pipe(map(res => {\n        return res;\n      }));\n    }\n\n  }\n\n  ProductServiceService.ɵfac = function ProductServiceService_Factory(t) {\n    return new (t || ProductServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductServiceService,\n    factory: ProductServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}